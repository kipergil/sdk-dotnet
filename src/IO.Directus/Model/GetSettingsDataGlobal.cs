/* 
 * directus.io
 *
 * API for directus.io
 *
 * OpenAPI spec version: 1.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Directus.Client.SwaggerDateConverter;

namespace IO.Directus.Model
{
    /// <summary>
    /// GetSettingsDataGlobal
    /// </summary>
    [DataContract]
    public partial class GetSettingsDataGlobal :  IEquatable<GetSettingsDataGlobal>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="GetSettingsDataGlobal" /> class.
        /// </summary>
        /// <param name="CmsUserAutoSignOut">CmsUserAutoSignOut.</param>
        /// <param name="ProjectName">ProjectName.</param>
        /// <param name="ProjectUrl">ProjectUrl.</param>
        /// <param name="CmsColor">CmsColor.</param>
        /// <param name="RowsPerPage">RowsPerPage.</param>
        /// <param name="CmsThumbnailUrl">CmsThumbnailUrl.</param>
        public GetSettingsDataGlobal(string CmsUserAutoSignOut = default(string), string ProjectName = default(string), string ProjectUrl = default(string), string CmsColor = default(string), string RowsPerPage = default(string), string CmsThumbnailUrl = default(string))
        {
            this.CmsUserAutoSignOut = CmsUserAutoSignOut;
            this.ProjectName = ProjectName;
            this.ProjectUrl = ProjectUrl;
            this.CmsColor = CmsColor;
            this.RowsPerPage = RowsPerPage;
            this.CmsThumbnailUrl = CmsThumbnailUrl;
        }
        
        /// <summary>
        /// Gets or Sets CmsUserAutoSignOut
        /// </summary>
        [DataMember(Name="cms_user_auto_sign_out", EmitDefaultValue=false)]
        public string CmsUserAutoSignOut { get; set; }

        /// <summary>
        /// Gets or Sets ProjectName
        /// </summary>
        [DataMember(Name="project_name", EmitDefaultValue=false)]
        public string ProjectName { get; set; }

        /// <summary>
        /// Gets or Sets ProjectUrl
        /// </summary>
        [DataMember(Name="project_url", EmitDefaultValue=false)]
        public string ProjectUrl { get; set; }

        /// <summary>
        /// Gets or Sets CmsColor
        /// </summary>
        [DataMember(Name="cms_color", EmitDefaultValue=false)]
        public string CmsColor { get; set; }

        /// <summary>
        /// Gets or Sets RowsPerPage
        /// </summary>
        [DataMember(Name="rows_per_page", EmitDefaultValue=false)]
        public string RowsPerPage { get; set; }

        /// <summary>
        /// Gets or Sets CmsThumbnailUrl
        /// </summary>
        [DataMember(Name="cms_thumbnail_url", EmitDefaultValue=false)]
        public string CmsThumbnailUrl { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class GetSettingsDataGlobal {\n");
            sb.Append("  CmsUserAutoSignOut: ").Append(CmsUserAutoSignOut).Append("\n");
            sb.Append("  ProjectName: ").Append(ProjectName).Append("\n");
            sb.Append("  ProjectUrl: ").Append(ProjectUrl).Append("\n");
            sb.Append("  CmsColor: ").Append(CmsColor).Append("\n");
            sb.Append("  RowsPerPage: ").Append(RowsPerPage).Append("\n");
            sb.Append("  CmsThumbnailUrl: ").Append(CmsThumbnailUrl).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as GetSettingsDataGlobal);
        }

        /// <summary>
        /// Returns true if GetSettingsDataGlobal instances are equal
        /// </summary>
        /// <param name="input">Instance of GetSettingsDataGlobal to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(GetSettingsDataGlobal input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.CmsUserAutoSignOut == input.CmsUserAutoSignOut ||
                    (this.CmsUserAutoSignOut != null &&
                    this.CmsUserAutoSignOut.Equals(input.CmsUserAutoSignOut))
                ) && 
                (
                    this.ProjectName == input.ProjectName ||
                    (this.ProjectName != null &&
                    this.ProjectName.Equals(input.ProjectName))
                ) && 
                (
                    this.ProjectUrl == input.ProjectUrl ||
                    (this.ProjectUrl != null &&
                    this.ProjectUrl.Equals(input.ProjectUrl))
                ) && 
                (
                    this.CmsColor == input.CmsColor ||
                    (this.CmsColor != null &&
                    this.CmsColor.Equals(input.CmsColor))
                ) && 
                (
                    this.RowsPerPage == input.RowsPerPage ||
                    (this.RowsPerPage != null &&
                    this.RowsPerPage.Equals(input.RowsPerPage))
                ) && 
                (
                    this.CmsThumbnailUrl == input.CmsThumbnailUrl ||
                    (this.CmsThumbnailUrl != null &&
                    this.CmsThumbnailUrl.Equals(input.CmsThumbnailUrl))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.CmsUserAutoSignOut != null)
                    hashCode = hashCode * 59 + this.CmsUserAutoSignOut.GetHashCode();
                if (this.ProjectName != null)
                    hashCode = hashCode * 59 + this.ProjectName.GetHashCode();
                if (this.ProjectUrl != null)
                    hashCode = hashCode * 59 + this.ProjectUrl.GetHashCode();
                if (this.CmsColor != null)
                    hashCode = hashCode * 59 + this.CmsColor.GetHashCode();
                if (this.RowsPerPage != null)
                    hashCode = hashCode * 59 + this.RowsPerPage.GetHashCode();
                if (this.CmsThumbnailUrl != null)
                    hashCode = hashCode * 59 + this.CmsThumbnailUrl.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
