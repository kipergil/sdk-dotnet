/* 
 * directus.io
 *
 * API for directus.io
 *
 * OpenAPI spec version: 1.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Directus.Client;
using IO.Directus.Api;

namespace IO.Directus.Test
{
    /// <summary>
    ///  Class for testing UtilsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class UtilsApiTests
    {
        private UtilsApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new UtilsApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of UtilsApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' UtilsApi
            //Assert.IsInstanceOfType(typeof(UtilsApi), instance, "instance is a UtilsApi");
        }

        
        /// <summary>
        /// Test GetHash
        /// </summary>
        [Test]
        public void GetHashTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string _string = null;
            //string hasher = null;
            //string options = null;
            //instance.GetHash(_string, hasher, options);
            
        }
        
        /// <summary>
        /// Test GetRandom
        /// </summary>
        [Test]
        public void GetRandomTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string length = null;
            //instance.GetRandom(length);
            
        }
        
    }

}
