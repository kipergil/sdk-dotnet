/* 
 * directus.io
 *
 * API for directus.io
 *
 * OpenAPI spec version: 1.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Directus.Client;
using IO.Directus.Api;
using IO.Directus.Model;

namespace IO.Directus.Test
{
    /// <summary>
    ///  Class for testing FilesApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class FilesApiTests
    {
        private FilesApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new FilesApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of FilesApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' FilesApi
            //Assert.IsInstanceOfType(typeof(FilesApi), instance, "instance is a FilesApi");
        }

        
        /// <summary>
        /// Test CreateFile
        /// </summary>
        [Test]
        public void CreateFileTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string data = null;
            //int? active = null;
            //string name = null;
            //string title = null;
            //string location = null;
            //string type = null;
            //string tags = null;
            //string caption = null;
            //instance.CreateFile(data, active, name, title, location, type, tags, caption);
            
        }
        
        /// <summary>
        /// Test GetFile
        /// </summary>
        [Test]
        public void GetFileTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? fileId = null;
            //var response = instance.GetFile(fileId);
            //Assert.IsInstanceOf<GetFile> (response, "response is GetFile");
        }
        
        /// <summary>
        /// Test GetFiles
        /// </summary>
        [Test]
        public void GetFilesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetFiles();
            //Assert.IsInstanceOf<GetFiles> (response, "response is GetFiles");
        }
        
        /// <summary>
        /// Test UpdateFile
        /// </summary>
        [Test]
        public void UpdateFileTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? fileId = null;
            //string data = null;
            //int? active = null;
            //string name = null;
            //string title = null;
            //string location = null;
            //string type = null;
            //string tags = null;
            //string caption = null;
            //string url = null;
            //int? width = null;
            //int? height = null;
            //int? size = null;
            //string embedId = null;
            //int? user = null;
            //string dateUploaded = null;
            //string storageAdapter = null;
            //instance.UpdateFile(fileId, data, active, name, title, location, type, tags, caption, url, width, height, size, embedId, user, dateUploaded, storageAdapter);
            
        }
        
    }

}
